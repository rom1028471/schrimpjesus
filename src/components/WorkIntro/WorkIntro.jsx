import { useState, useEffect } from 'react';
import './WorkIntro.css';

const WorkIntro = ({ work, onStartReading, onBack }) => {
  const [currentLine, setCurrentLine] = useState(-1);
  const [showButton, setShowButton] = useState(false);

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üîß WorkIntro –¥–ª—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', work.title);
  console.log('üîß –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤:', work.blocks?.length || 0);
  console.log('üîß –ë–ª–æ–∫–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏:', work.blocks?.filter(b => b.type === 'image').map(b => b.imageFile) || []);

  // –ò–Ω—Ç—Ä–æ —Ç–µ–∫—Å—Ç —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏
  const introLines = [
    `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "${work.title}"`,
    `–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Ç ${work.author}`,
    work.genre && `–ñ–∞–Ω—Ä: ${work.genre}`,
    '',
    work.description,
    '',
    work.introText || '–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä, –≥–¥–µ –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ...',
    '',
    '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –æ–ø—ã—Ç—É —á—Ç–µ–Ω–∏—è —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –∏ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º.'
  ].filter(Boolean);

  useEffect(() => {
    const timer = setTimeout(() => {
      if (currentLine < introLines.length - 1) {
        setCurrentLine(prev => prev + 1);
      } else if (!showButton) {
        setTimeout(() => setShowButton(true), 800);
      }
    }, 1200); // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏

    return () => clearTimeout(timer);
  }, [currentLine, introLines.length, showButton]);

  return (
    <div className="work-intro">
      {/* –§–æ–Ω–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
      <div className="intro-background">
        <div className="floating-orb orb-1"></div>
        <div className="floating-orb orb-2"></div>
        <div className="floating-orb orb-3"></div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
      <button className="intro-back-button" onClick={onBack}>
        ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
      </button>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="intro-content">
        <div className="intro-text">
          {introLines.map((line, index) => (
            <div
              key={index}
              className={`intro-line ${index <= currentLine ? 'visible' : ''} ${
                index === 0 ? 'title-line' : 
                index === 1 ? 'author-line' :
                index === 2 ? 'genre-line' : ''
              }`}
              style={{
                animationDelay: `${index * 0.3}s`
              }}
            >
              {line}
            </div>
          ))}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞—Ç—å —á—Ç–µ–Ω–∏–µ */}
        <div className={`intro-action ${showButton ? 'visible' : ''}`}>
          <button 
            className="start-reading-button"
            onClick={onStartReading}
          >
            <span className="button-text">–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —á—Ç–µ–Ω–∏—é</span>
            <span className="button-arrow">‚Üí</span>
          </button>
          
          <div className="reading-stats">
            <span className="stat">
              üìñ {work.blocks?.length || 0} —á–∞—Å—Ç–µ–π
            </span>
            <span className="stat">
              ‚è±Ô∏è {work.readingTime || '15 –º–∏–Ω'}
            </span>
            {work.hasAudio && (
              <span className="stat">
                üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ
              </span>
            )}
            {work.hasImages && (
              <span className="stat">
                üñºÔ∏è –í–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
              </span>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default WorkIntro;
